# Build Pipeline for Relativity Test Helpers

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

# Install NuGet Installer tool
steps:
- task: NuGetToolInstaller@0

# Restore NuGet packages for the Visual Studio Solution
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# Build Visual Studio Solution
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Run Integration tests only when merging from develop to Master. This is achieved by setting a 'condition' to the task
- task: VSTest@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\bin\**\Relativity.Test.Helpers.NUnit.Integration.dll
    searchFolder: '$(System.DefaultWorkingDirectory)'
    distributionBatchType: basedOnAssembly
    runSettingsFile: 'Source\Relativity.Test.Helpers\Relativity.Test.Helpers.NUnit.Integration\test.runsettings'
    overrideTestrunParameters: 
      -TestWorkspaceName $(testWorkspaceName)
      -TestWorkspaceTemplateName $(testWorkspaceTemplateName)
      -AdminUsername $(adminUsername)
      -AdminPassword $(adminPassword)
      -SQLUserName $(sqlUserName)
      -SQLPassword $(sqlPassword)
      -SQLServerAddress $(sqlServerAddress)
      -RESTServerAddress $(restServerAddress)
      -ServerBindingType $(serverBindingType)
      -RelativityInstanceAddress $(relativityInstanceAddress)
      -GmailMailTestEmailAddress $(gmailMailTestEmailAddress)
      -GmailMailTestEmailPassword $(gmailMailTestEmailPassword)
      -MailTrapTestApiKey $(mailTrapTestApiKey)
      -MailTrapTestEmailAddress $(mailTrapTestEmailAddress)
      -MailTrapTestEmailUsername $(mailTrapTestEmailUsername)
      -MailTrapTestEmailPassword $(mailTrapTestEmailPassword)

# Copy the required Project DLL's to Artifact Staging Directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

# Copy NuGet spec file to Artifact Staging Directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '*.nuspec*'
    TargetFolder: '$(build.artifactstagingdirectory)'

# Copy NuGet targets file to Artifact Staging Directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '*.targets*'
    TargetFolder: '$(build.artifactstagingdirectory)'

# Copy the variables.json file which contains the version numbers for the NuGet package to Artifact Staging Directory
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: 'variables.json'
    TargetFolder: '$(build.artifactstagingdirectory)'

# Publish Artifact Staging Directory to a Container to be accessed in Release pipeline for publishing NuGet package
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    